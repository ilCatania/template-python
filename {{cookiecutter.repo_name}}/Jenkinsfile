{%- if cookiecutter.ci_implementation == "jenkins" -%}
pipeline {
  agent any

   triggers {
    githubPush()
  }


  stages {
    stage('Create virtual environment') {
      steps {
        // TODO rework this script, use parallel steps where possible,
        // use separate venv / docker image for linting
        sh '''
            python3.10 -m venv venv
            source venv/bin/activate
            pip install -U pip
            pip install -U wheel flake8 flake8-docstrings isort black
            pip install .[tests]
          '''
      }
    }
    stage('Lint') {
      steps {
        sh '''
            source venv/bin/activate
            flake8 --verbose
            isort --check-only --verbose .
            black --check --verbose .
        '''
      }
    }
    stage('Test') {
      steps {
         sh '''
            source venv/bin/activate
            pip install pytest pytest-xdist pytest-cov
            pytest --junitxml ./test-reports/junit.xml \
                --cov --cov-report xml:./test-reports/coverage.xml
         '''
         // TODO add test result publishing
      }
    }
  }
}
{% endif -%}

{%- if cookiecutter.ci_implementation == "github-actions" -%}
name: Python build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
      - name: formatting check
        uses: psf/black@stable
        with:
          options: "--check --verbose"
      - name: isort check
        uses: isort/isort-action@v1.0.0
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[tests] pytest-cov
    - name: Test with pytest and generate coverage report
      run: |
        pytest \
          --junitxml=junit/test-results.xml \
          --cov=src \
          --cov-report=xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: ./**/junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: {% raw %}${{ always() }}{% endraw %}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: ./**/test-results.xml
{% endif -%}
